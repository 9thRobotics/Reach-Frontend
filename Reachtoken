<script>
    // Check if MetaMask is installed
    if (typeof window.ethereum !== 'undefined') {
        console.log('MetaMask is installed!');
    } else {
        alert('MetaMask is not installed. Please install MetaMask to use this feature.');
    }

    // Connect to MetaMask
    async function connectWallet() {
        try {
            const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
            console.log("Connected account:", accounts[0]);
            // Store the current account
            window.account = accounts[0];
        } catch (err) {
            console.error("Wallet connection failed:", err);
        }
    }

    // Function to buy tokens
    async function buyTokens() {
        const buyAmount = document.getElementById('buyAmount').value;
        // Interact with your smart contract to buy tokens
        // This is a placeholder - replace with your contract interaction logic
        alert(`Buying tokens with ${buyAmount} ETH`);
    }

    // Function to stake tokens
    async function stakeTokens() {
        const stakeAmount = document.getElementById('stakeAmount').value;
        // Interact with your smart contract to stake tokens
        // This is a placeholder - replace with your contract interaction logic
        alert(`Staking ${stakeAmount} tokens`);
    }

    // Function to unstake tokens
    async function unstakeTokens() {
        // Interact with your smart contract to unstake tokens
        // This is a placeholder - replace with your contract interaction logic
        alert('Unstaking tokens');
    }

    // Function to swap tokens
    async function swapTokens() {
        const swapFromAmount = document.getElementById('swapFromAmount').value;
        const swapFromToken = document.getElementById('swapFromToken').value;
        const swapToToken = document.getElementById('swapToToken').value;
        // Interact with your smart contract to swap tokens
        // This is a placeholder - replace with your contract interaction logic
        alert(`Swapping ${swapFromAmount} ${swapFromToken} for ${swapToToken}`);
    }

    // Event listeners for the buttons
    document.getElementById("buyTokenButton").addEventListener("click", buyTokens);
    document.getElementById("stakeTokenButton").addEventListener("click", stakeTokens);
    document.getElementById("unstakeTokenButton").addEventListener("click", unstakeTokens);
    document.getElementById("swapButton").addEventListener("click", swapTokens);

    // Connect wallet on page load
    connectWallet();
</script>
